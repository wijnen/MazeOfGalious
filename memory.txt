Full memory map of MoG.

c000
d000
e000
	e000	state
	e001	substate
	e041-e042: current world (1=castle) and current room
	e097: something used to see if special thing already happened?
	e0b0-e0c7:
		byte 0:
			0: Timer expired?
			1: Timer expired and in correct room/draw ladder upon re-entering room?
			2: Timer not yet expired?
		byte 1: Timer for reappearing disappeared ladder. Counts down to 0x00, possible statically from 0x3C (=60, intended as 60 seconds?). Steps down every 0x20 (test: and 0x1F) beats of counter 0xE604. Takes about 75 seconds to countdown 40 ticks.
		
		e0b0-e0b1: (ID 01) room 0x0d
		e0b2-e0b3: (ID 02) room 0x13
		e0b4-e0b5: (ID 03) room 0x15
		e0b6-e0b7: (ID 04) room 0x3c
		e0b8-e0b9: (ID 05) room 0x46
		e0ba-e0bb: (ID 06) room 0x49
		e0bc-e0bd: (ID 07) room 0x56
		e0be-e0bf: (ID 08) room 0x66
		e0c0-e0c1: (ID 09) room 0x6a
		e0c2-e0c3: (ID 0A) room 0x74
		e0c4-e0c5: (ID 0A) room 0x7c
		e0c6-e0c7: (ID 0A) room 0x85
	e4a0-e4ff: vertical elevator info; 06 records:
		0 elevator id
		1 current room
		2 flags: bit 1: down(0) or up(1) bit 2: ?
		3 current room index
		4 0
		5 current position Y
		6 0
		7 current position X
		8 dX per frame (all 0)
		9 dY per frame (all 2)
		a -
		b -
		c top limit room
		d top limit position
		e bottom limit room
		f bottom limit position
	e604: Counter. Starts counting from 0x00 upwards, upon entering a room.
	e60c-e60d: address of some info about current room; 1 bit each.
	e610: is this room in the special list? (all killall rooms seem to be, plus some more.)
	e611: flag: 1 = all enemies need to be killed. 0 = no killall specials.
	e612: some room property set up during room enter (to 0 if room not in list from 60ee, 1 if it is on the list).
	e613: enemy counter during room setup, to index bits (for show/hide) in *e60c.
	e614: some room property based on table (2 bits per room) at ba2e. Can be 0, 1 or 2.
	e620: number of enemies in this room
	e621: used during enemy setup
	e622: number of enemies to kill before special happens, or 0.
	e624: some enemy property set during setup (again for each enemy?)
	e625: set to 80 if *e097 > 0 and correct enemy type is in room, otherwise set to 0 correct type taken from lists, see code at 659b @456
	e635: maximum allowed number of enemies in this room
	e636: something about enemies.
	e648-e64b: exits from this room: down, up. left, right
	e650-e670: appearing enemies
		e650: falling+bouncing grey boulders appear in this room. Code at 61e4@4: hardcoded to castle rooms 03, 47, 71, 72.
		e653: exploding fireballs appear in this room. Code at 6205@4: hardcoded to castle rooms 90,91,92,93; world 8 rooms 0f, 10, 11, 12, 13; world 9 rooms 03, 04, 05; world 10 rooms 02, 03.
		e659: jumping fish appear in this room. Code at 6239@4: hardcoded to castle rooms 89, 8a, 8b, 8c.
		e65c: crawlers appear in this room. Code at 6249@4: hardcoded to castle rooms 0a, 11, 1c, 38, 49, 7a, 83, 84, 50; world 4 rooms 0a, 0c; world 6 room 08.
		e65f: seahorse demons appear in this room. Code at 6291@4: hardcoded to world 5 rooms 07, 08, 09, 0a.
		e662: vertical blobs appear in this room. Code at 62a4@4: hardcoded to castle rooms 66, 5e, 5f.
		e665: falling (non bouncing) grey boulders appear in this room: hardcoded to castle rooms 2f, 3b; world 8 rooms 02, 0e.
		e668+e669+e66a: flocking birds. code at 61a8@4: hardcoded to world 6 rooms 02(5), 03(a), 04(5), 07(a), 08(a), 11(a), 12(5)
			e668: 1 if flocking birds appear in this room.
			e669: number of birds (5 or a)
			e66a: ? (initialized to 0010)
	e680: god id of shrine in this room
	e688: marker(?) for world door
	e690: god id of shrine you're standing in
	e691: shopping substate?
	e692: position of selector in shop
	e740: item id that is in current room
	e744-e745: appear location
	e800-?: enemy info; 20 byte each
		00	enemy type
		01	initial 0
		02	Flags. Bit 7: active. Initial f0 (normal) or f8 (killall)
		03	enemy number, if bits in *e60c are used for this enemy (room?).
		04	initial 00
		05	Y
		06	initial 00
		07	X
		08	initial 00
		09	bit 7: set for sprite, clear for characters. bit 6: set for boss? initial from edata[0]
		0a	sprite name (for sprite) or boss pattern for character enemies. initial from edata[1]
		0b	sprite color; initial from edata[2] edata is 67b6 + 5 * *e635 ?! (should be etype...)
		0c	?	from f012
		0d	?	from f013
		0e	?	from f014
		0f	?	from f015
		10	hitpoints left	initial from from edata[3] (bat: 01); ff is special
		11	?	initial from from edata[4] (bat: 69)
		12+13	for character enemies: screen address (in ed00) for first character
		14	initial 00
		15	initial 00
		16	initial 00
		17	initial 00
		18	initial 00
		19	initial 00
		1a	initial 00
		1b	initial 00
		1c	initial 00
		1d	initial 00
		1e	initial 00
		1f	initial 00
	eaa2: Y coordinate of trap wall
	eaa3: X coordinate of trap wall
	ec00-ec07: disappearing ladder
								room 0d	room 13	room 15	room 3c	room 46	room 49	room 56	room 66	room 6a room 74	room 7c	room 85	room 88
		00: non zero if disappearing ladder		01	02	03	04	05	06	07	08	09	0A	0B	0C	0D
		01: Y						40	80	60	40	80	40	80	60	60	60	40	80	60
		02: X						B0	A0	80	50	30	30	60	E0	70	20	A0	B0	30
		03: height (counted from top)			07	07	03	07	07	0F	07	07	07	07	0B	07	0B
		04: ?						40	40	20	40	40	80	40	40	40	40	60	40	60
		05: X of something					16	14	90	0A	06	06	0C	9C	8E	84	14	16	86
		06:						EE	EF	EE	EE	EF	EE	EF	EE	EE	EE	EE	EF	EE
			0000 0001
			0000 0010
			0000 0100
			0000 1000
				0: Draw ladder downwards?
				1: Draw ladder upwards?
			0001 0000
			0010 0000
			0100 0000
			1000 0000:
		07: 00: hasn't disappeared, 01: disappeared	00	00	00	00	00	00	00	00	00	00	00	00	00
	ec80-ecff: sprite attribute buffer.
	ed00-eeff: screen buffer.
f000
